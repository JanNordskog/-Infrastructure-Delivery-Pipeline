steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--no-cache',
      '-t',
      '${{ secrets._DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/quiz-app-repo/${{ secrets._SERVICE_NAME }}:$COMMIT_SHA',
      '.',
      '-f',
      'Dockerfile'
    ]
    id: Build

  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      '${{ secrets._DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/quiz-app-repo/${{ secrets._SERVICE_NAME }}:$COMMIT_SHA'
    ]
    id: Push

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: 'gcloud'
    args: [
      'run',
      'services',
      'update',
      '${{ secrets._SERVICE_NAME }}',
      '--platform=managed',
      '--image=${{ secrets._DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/quiz-app-repo/${{ secrets._SERVICE_NAME }}:$COMMIT_SHA',
      '--labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID',
      '--region=${{ secrets._DEPLOY_REGION }}',
      '--quiet'
    ]
    id: Deploy

substitutions:
  _DEPLOY_REGION: ${{ secrets._DEPLOY_REGION }}  # Using GitHub Secret for deployment region
  _SERVICE_NAME: ${{ secrets._SERVICE_NAME }}  # Using GitHub Secret for service name

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - quiz-app-backend

images:
  - '${{ secrets._DEPLOY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/quiz-app-repo/${{ secrets._SERVICE_NAME }}:$COMMIT_SHA'
